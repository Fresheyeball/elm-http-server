var sanitize = function sanitize(record) {
    var spaces = Array.prototype.slice.call(arguments, 1);
    return spaces.reduce(function (r, space) {
        return (function () {
            r[space] ? void 0 : r[space] = {};
            return r[space];
        })();
    }, record);
};
var readFile = function readFile(fs, Task) {
    return function (path) {
        return Task.asyncFunction(function (callback) {
            return fs.readFile(path, function (err, data) {
                return callback(err ? Task.fail(err) : Task.succeed(data));
            });
        });
    };
};
var make = function make(localRuntime) {
    return function () {
        var fsø1 = require('fs');
        var Taskø1 = Elm.Native.Task.make(localRuntime);
        return (function () {
            sanitize(localRuntime, 'Native', 'FS');
            return function () {
                var vø1 = localRuntime.Native.FS.values;
                return vø1 ? vø1 : localRuntime.Native.FS.values = { 'readFile': readFile(fsø1, Taskø1) };
            }.call(this);
        })();
    }.call(this);
};
sanitize(Elm, 'Native', 'FS');
Elm.Native.FS.make = make;
typeof(window) == 'undefined' ? window = global : void 0;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFub255bW91cy53aXNwIl0sIm5hbWVzIjpbInNhbml0aXplIiwicmVjb3JkIiwic3BhY2VzIiwicmVkdWNlIiwiciIsInNwYWNlIiwicmVhZEZpbGUiLCJmcyIsIlRhc2siLCJwYXRoIiwiYXN5bmNGdW5jdGlvbiIsImNhbGxiYWNrIiwiZXJyIiwiZGF0YSIsImZhaWwiLCJzdWNjZWVkIiwibWFrZSIsImxvY2FsUnVudGltZSIsImZzw7gxIiwicmVxdWlyZSIsIlRhc2vDuDEiLCJFbG0iLCJOYXRpdmUuVGFzay5tYWtlIiwidsO4MSIsIk5hdGl2ZS5GUy52YWx1ZXMiLCJOYXRpdmUuRlMubWFrZSIsInR5cGVvZiIsIndpbmRvdyIsImdsb2JhbCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBT0EsUUFBQSxHQUFQLFNBQU9BLFFBQVAsQ0FDR0MsTUFESCxFO1FBQ1lDLE1BQUEsRztJQUNWLE9BQUNBLE1BQUEsQ0FBT0MsTUFBUixDQUFlLFVBQUtDLENBQUwsRUFBT0MsS0FBUCxFQUFjO0FBQUEsZSxhQUMzQjtBQUFBLFlBQVVELENBQU4sQ0FBUUMsS0FBUixDQUFKLEcsTUFBQSxHQUFtQ0QsQ0FBTixDQUFRQyxLQUFSLENBQU4sR0FBcUIsRUFBNUM7QUFBQSxZQUNBLE9BQU1ELENBQU4sQ0FBUUMsS0FBUixFQURBO0FBQUEsUyxDQUFBLEVBRDJCO0FBQUEsS0FBN0IsRUFHQUosTUFIQSxFO0NBRkY7QUFPQSxJQUFPSyxRQUFBLEdBQVAsU0FBT0EsUUFBUCxDQUNHQyxFQURILEVBQ01DLElBRE4sRUFFRTtBQUFBLHFCQUFLQyxJQUFMLEVBQVc7QUFBQSxlQUFnQkQsSUFBZixDQUFDRSxhQUFGLENBQXFCLFVBQUtDLFFBQUwsRUFDOUI7QUFBQSxtQkFBV0osRUFBVixDQUFDRCxRQUFGLENBQWNHLElBQWQsRUFBbUIsVUFBS0csR0FBTCxFQUFVQyxJQUFWLEVBQ2pCO0FBQUEsdUJBQUNGLFFBQUQsQ0FDTUMsR0FBSixHQUNHSixJQUFBLENBQUtNLElBQU4sQ0FBV0YsR0FBWCxDQURGLEdBRUdKLElBQUEsQ0FBS08sT0FBTixDQUFjRixJQUFkLENBSEo7QUFBQSxhQURGO0FBQUEsU0FEUztBQUFBLEtBQVg7QUFBQSxDQUZGLENBUEE7QUFnQkEsSUFBT0csSUFBQSxHQUFQLFNBQU9BLElBQVAsQ0FDR0MsWUFESCxFQUNpQjtBQUFBLFcsWUFDZDtBQUFBLFlBQUFDLEksR0FBSUMsT0FBRCxDQUFTLElBQVQsQ0FBSDtBQUFBLFFBQ0EsSUFBQUMsTSxHQUFNQyxHQUFBLENBQUlDLGdCQUFMLENBQXNCTCxZQUF0QixDQUFMLENBREE7QUFBQSxRQUVELE8sYUFBSTtBQUFBLFlBQUNqQixRQUFELENBQVVpQixZQUFWLEUsUUFBQSxFLElBQUE7QUFBQSxZQUNGLE8sWUFBTTtBQUFBLG9CQUFBTSxHLEdBQUVOLFlBQUEsQ0FBYU8sZ0JBQWY7QUFBQSxnQkFDSixPQUFJRCxHQUFKLEdBQU1BLEdBQU4sR0FBY04sWUFBQSxDQUFhTyxnQkFBbkIsR0FBb0MsRSxZQUMvQmxCLFFBQUQsQ0FBVVksSUFBVixFQUFhRSxNQUFiLENBRGdDLEVBQTVDLENBREk7QUFBQSxhLEtBQU4sQyxJQUFBLEVBREU7QUFBQSxTLENBQUEsRUFBSixDQUZDO0FBQUEsSyxLQURjLEMsSUFBQTtBQUFBLENBRGpCLENBaEJBO0FBeUJDcEIsUUFBRCxDQUFVcUIsR0FBVixFLFFBQUEsRSxJQUFBLEVBekJBO0FBMEJNQSxHQUFBLENBQUlJLGNBQVYsR0FBeUJULElBQXpCLENBMUJBO0FBNEJTVSxNQUFELENBQVFDLE1BQVIsQ0FBSixJLFdBQUosR0FBMENBLE1BQU4sR0FBYUMsTUFBakQsRyxNQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKGRlZm4tIHNhbml0aXplXG4gIFtyZWNvcmQgJiBzcGFjZXNdXG4gIChzcGFjZXMucmVkdWNlIChmbiBbciBzcGFjZV0gKGRvXG4gICAgKGlmIChhZ2V0IHIgc3BhY2UpIG5pbCAoc2V0ISAoYWdldCByIHNwYWNlKSB7fSkpXG4gICAgKGFnZXQgciBzcGFjZSkpKVxuICByZWNvcmQpKVxuXG4oZGVmbi0gcmVhZEZpbGVcbiAgW2ZzIFRhc2tdXG4gIChmbiBbcGF0aF0gKC5hc3luY0Z1bmN0aW9uIFRhc2sgKGZuIFtjYWxsYmFja11cbiAgICAoLnJlYWRGaWxlIGZzIHBhdGggKGZuIFtlcnIsIGRhdGFdXG4gICAgICAoY2FsbGJhY2tcbiAgICAgICAgKGlmIGVyclxuICAgICAgICAgIChUYXNrLmZhaWwgZXJyKVxuICAgICAgICAgIChUYXNrLnN1Y2NlZWQgZGF0YSkpKSkpKSkpKVxuXG4oZGVmbi0gbWFrZVxuICBbbG9jYWxSdW50aW1lXSAobGV0XG4gIFtmcyAocmVxdWlyZSBcImZzXCIpXG4gICBUYXNrIChFbG0uTmF0aXZlLlRhc2subWFrZSBsb2NhbFJ1bnRpbWUpXVxuICAoZG8gKHNhbml0aXplIGxvY2FsUnVudGltZSA6TmF0aXZlIDpGUylcbiAgICAobGV0IFt2IGxvY2FsUnVudGltZS5OYXRpdmUuRlMudmFsdWVzXVxuICAgICAgKGlmIHYgdiAoc2V0ISBsb2NhbFJ1bnRpbWUuTmF0aXZlLkZTLnZhbHVlcyB7XG4gICAgICAgIDpyZWFkRmlsZSAocmVhZEZpbGUgZnMgVGFzayl9KSkpKSkpXG5cbihzYW5pdGl6ZSBFbG0gOk5hdGl2ZSA6RlMpXG4oc2V0ISBFbG0uTmF0aXZlLkZTLm1ha2UgbWFrZSlcblxuKGlmICg9PSAodHlwZW9mIHdpbmRvdykgOnVuZGVmaW5lZCkgKHNldCEgd2luZG93IGdsb2JhbCkpXG4iXX0=
